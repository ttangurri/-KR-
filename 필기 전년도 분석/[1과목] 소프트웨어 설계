2020.06 기출문제
1.
2. 일련번호/
연상코드: 약호. 관계있는 기호
블록코드: (=구분코드) 공통성이 있는 것끼리 (블록으로) 구분
표의 숫자코드: 항목의 성질, 물리적 수치를 적용
순차코드: 일련번호
3. 객체지향/
메소드: 메세지를 받았을 때 수행
클래스: 데이터 추상화
상속성: 부모(상위) 클래스, 자녀(하위) 클래스
메시지: 상호작용 수단, 지시 명령 요구사항
4. 데이터 흐름도 (DFD)-process,flow,store(저장),terminal(단말)
쌩뚱맞은 데이터 사전;;
5. 플랫폼 성능 분석-경과시간, 응답시간, 가용성
서버튜닝은 계속해도 ok
6. uml 확장 모델; stero 타입 객체
<< >>
AI 활용 설정
사진 설명을 입력하세요.
7. GoF(gang of four)의 디자인 패턴(생성.구조.행위) 중 행위패턴
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
8. 자료의 생략 ( )
9. 미들웨어 for 트랜잭션, 데이터 감시 : TP monitor
RPC: remote procedure call 원격 절차 호출
ORB: object request broker 객체간 요청 "지원"
10.UI 설계 원칙
직관성 유효성(사용자목표 달성) 학습성(초보가 쉽게) 유연성(사용자 인터랙션)
11. XP의 5가지 원칙 (익스트림 프로그래밍)
용기(능동적 대처), 의사소통, 피드백, 존중(팀원의 기여)
12. UML 다이어그램 - 구조 다이어그램: (★웬만하면 C,P, 가끔 D,O로 ..역시 구조적)
AI 활용 설정
사진 설명을 입력하세요.
13. 요구사항 분석 (sw 개발 방법 中)
-조사, 문서화, 제약설정(which is 제약 사항들 확인) // 설계명세서 작성은 요구사항 명세에서 진행한다.
14.럼바우의 객체지향 분석절차
객체-> 동적-> 기능
15.공통 module에 대한 명세 기법 - 한가지로 해석될 수 있도록: 명확성
16. 객체지향기법 - 부분-전체 관계, 부분의 관계: 집단화
17. CASE 주요기능: 그래픽, 다이어그램, 모형, 오류/모순지원, 전단계연결
18. DBMS 분석 시 고려사항: 무결성(가용성) 일관성(상호호환성) 보안(기술지원) 회복 효율(성능) DB확장(구축비용)
19. HIPO (계층 인풋 process opuput)- 하향식 sw 개발
20. ER 다이어그램 사용 : coad와 yourdan(클래스와 객체 '식별'), booch(동적 모델링, 그래픽 표기법)

2020.08 기출문제
1. 요구사항 분석.
2. GoF(gang of four)의 디자인 패턴 (2)
Factory method= 객체를 :생성:하기 위한 인터페이스를 정의
3. 럼바우 객체지향 (2)
-동적, 기능, 객체 모델링 (정적 x)
4. 애자일 기법
AI 활용 설정
사진 설명을 입력하세요.
5. 미들웨어 솔루션 (2)
WAS(웹 환경, 동적 콘텐츠 처리. 구현용 미들웨어)
-> 미들웨어 아님.... Web server (저용량 정적 파일)
RPC -로컬처럼 호출하는 미들웨어
ORB - 객체지향 미들웨어
6. UML, 시퀀스 다이어그램:
AI 활용 설정
사진 설명을 입력하세요.
+제어 삼각형
7. 정보은닉 in 객체지향 (캡슐화)
8. GoF(gang of four)의 디자인 패턴(3)
9. UI 설계원칙 (2)
10. 코드의 기본기능
-식별: 성격 식별/구별
-분류: 식별된 데이터끼리 그룹화
-배열: 그룹화된 데이터들을 배열
-표준화: 단일한 형태의 표준화된 표현
11. "협약에 의한 설계"
1) 선행조건 2) 결과조건 3) 불변조건
12. UML 다이어그램 (2) - 행위 다이어그램
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
(★웬만하면 C,P, 가끔 D,O로 ..역시 구조적)

AI 활용 설정
사진 설명을 입력하세요.
13. 클래스: 하나 이상 유사한 객체들을 묶음
14.
15. 객체지향 sw 설계, ★ 디자인패턴 구성요소: 패턴이름, (문제, 솔루션,) (사례, 결과,) 샘플코드
16. 자료 사전 (data dictionary)
= 자료의 정의
+ 자료의 연결
() 자료의 생략
[] 자료의 선택
{} 자료의 반복
** 자료의 설명(주석)
17.객체지향 설계원칙
SRP (single responsibility principle) 객체는 단 하나의 책임만!
OCP (Open Closed Principle-개방 폐쇄의 원칙) 기능 추가 가능하도록 오픈되어 있어야 (단 , 기존의 코드를 변경 x-closed)
LSP (L리스코프 Substitution Principle) 일반화관계-자식클래스는 부모클래스가 하는 모든 행위가 가능하다
ISP (Interface segregation Principle-인터페이스 분리 원칙) 인터페이스를 클라이언트에 특화되도록 분히시켜야, 사용하지 않는 인터페이스 때문에 영향을 받아서는 x
DIP(Dependency Inversion Principle) 의존관계를 맺을 때 "변화하기 어려운것"에 맺어라!!!!
18.자료 흐름도 (data flow) (2)
19. 20. 인터페이스 요구사항 검토 방법
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
2020.09 기출문제
1. XP의 기본원리- 선형적x
2. 럼바우 객체지향 (3)
AI 활용 설정
사진 설명을 입력하세요.
3. CASE기능 (2)
4. 캡슐화란? -단순화, 재사용성, 오류 파급효과 ↘
5, 객체지향 설계 원칙 (2)
6. 파이프 필터 형태의 소프트웨어 아키텍쳐 - 서브시스템이이 입력을 받아 처리하고 다음 서브로 넘김
c.f. 소프트웨어 아키텍쳐
AI 활용 설정
사진 설명을 입력하세요.
7. 면적/용량/물리 수치를 이용한 코드 ---표의 숫자 코드
8. 디자인 패턴 사용 장 단점 (단점: 절차형 언어와 같이 사용 x)
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
9. DFD (2)/ 자료흐름 그래프, 버블 그래프
-구조적 분석 가능
-시간 흐름 명확히 표현 xxxxxxxxx (의외로다가,,,,)
-화살표, 원, 직선(linear),사각형 가능
10.
11. UML의 기본 구성요소: ★ 사물/관계/다이어그램
12. 소프트웨어의 상위 설계 ★
-인터페이스 설계와 정의, 아키텍쳐 설계
13. 자료사전(3)
14. UI 개발시스템 기능 (소스 코드 분석/ 오류 복구는 xxx)
1) 사용자 입력 검증
2) 에러 처리
3) 도움, 프롬프트
15. 요구사항 명세 기법
AI 활용 설정
사진 설명을 입력하세요.
정형명세: Z, VDM, Pertri-Net(모형기반), CSP,CCs, LoTos(대수적 방법), 명세 간결, 명세와 구현이 일치
비정형명세: FSM, Decision table, E-R 모델링, shor chasrt(SADT), USE CASE(사용자기반 모델링)
16. sw 개발/
**요구 분석 과정
-문서화(이후 유지보수에서 활용)
-자료흐름도, 자료 사전 활용
-소단위 명세서(mini-spec)
개발비용이 많이 드는 단계는???? 유지보수
17. 애자일 방법론
AI 활용 설정
사진 설명을 입력하세요.
18. 미들웨어: 클라이언트-서버 통신
19. GoF(gang of four)의 디자인 패턴(4)
20. sw설계지침 - 모듈간의 결합도는 약할수록, 응집도는 강할수록 good!!!

2021.03 기출문제
1.출제오류 있음. (리눅스)
2.
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
3. 객체지향 개념
캡슐화: 데이터-함수 묶음. 외부와 경계(은닉), 필요한 인터페이스만 드러냄
메세지: 객체의 행위
다형성(poly~): 파생된 행위와 관련성 + 또다른 행위
상속: 하나의 클래스가 다른 클래스로부터 물려받음
4. GoF(gang of four)의 디자인 패턴(5)
5. 미들웨어 솔루션 (5)
RPC: remote procedure call 원격 절차 호출
ORB: object request broker 객체간 요청 "지원"
6.
7. 객체지향 분석(OOA) 4대 방법론 (Coad-Yourdon, Rumbaugh(OMT), Booch, Jacobson) (2)
-Courd - Yourdon 방법: 객체와 역할을 분류하고 관계를 명확히 표현 (E-R다이어그램 사용)
-럼바우 분석 기법: 구조(정적), 행위(동적), 기능(프로세스 흐름)을 모두 표현하는 균형 잡힌 분석
-Booch 분석 기법: 정적 모델링(클래스 관계) + 동적 모델링(상태 전이, 객체 상호작용)/ 미시-거시 프로세스를 모두 사용/ 클래스&객체를 분석 및 식별
-Jacobson 방법: 유스케이스(Use Case)를 중심으로 분석/ 상호작용
8. Fan in - Fan out
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
따라서 F를 기준으로 Fan in은 (직접)상단에 있는 B,C,D이고 Fan out 은 (직접) 하단에 있는 G, H이다.
9.
10. 미들웨어의 개념: 서로 다른 소프트웨어(애플리케이션, 시스템, DB 등)가 서로 통신하고 데이터를 주고받을 수 있도록 중간에서 연결해주는 소프트웨어 계층
11. CASE (3)
-모듈화된 설계 유도 -> sw 모듈의 재사용성이 향상
-자동화된 기법-> sw 품질 향상
-유지보수 완전 굿굿굿! 그러나... 사용자 친화적 (easY)이지는 xxxxxxx
12. UML 모델
기능적 모델: Use Case Diagram/ 사용자 측면에서 본 시스템 기능
정적 모델:시스템의 구조적 요소(클래스, 속성, 관계 등)/Class Diagram, Object Diagram 등을 사용
동적 모델:
-Sequence Diagram: 메시지 교환 순서를 시간의 흐름에 따라 표현
-State Diagram: 상태 변화와 상태 전이(Transition)를 표현
-Activity Diagram: 흐름, 조건 분기, 병렬 수행 등을 표현
13.유스케이스:
(유스케이스 구성요소)
-연관: usecase와 actor의 관계
-확장: 기본 usecase 수행시 특별 조건을 만족할 때 수행
-포함: 시스템 기능이 별도의 기능을 포함
-일반화: 상속(?)
-그룹화: 여러개의 usecase를 단순화
14. 요구사항 모델링 (+에자일 방법도 이용됨)
AI 활용 설정
사진 설명을 입력하세요.
15. 디자인 패턴을 이용한 sw 재사용
16. 럼바우 분석기법(3)
-객체 모델링 (정보 모델링) object
-동적 모델링 (상태 다이오그램) dynamic
-기능 모델링 (자료 흐름도) function
17.sw개발 비즈니스
객체지향 분석: 객체-속성, 클래스-멤버, 전체-부분으로 나누어 분석하는 기법
18. 애자일 "문서 이해, 문서 < 실제 sw 작동"
19. UML 다이어그램 (3) ★
-활동 다이어그램
-상태 다이어그램 (클래스 상태변화, 객체간 상호작용)-state
-클래스 다이어그램
20. 하향식 설계: 메인에서 하위로 설계

2021.05 기출문제
1.시스템 구성요소
-입력 input
-처리 process
-출력 ouput
-피드백 feedback
2. usecase (2) : 요구사항을 모델링할 때 많이 사용하는 대표적인 UML 도구
-액터(Actor): 시스템과 상호작용하는 외부 사용자나 시스템 (ex. 사용자, 관리자, 다른 시스템)
AI 활용 설정
사진 설명을 입력하세요.
-유스케이스(Use Case): 액터가 시스템을 통해 수행할 수 있는 기능 (ex. 로그인, 검색, 결제 등)
-시스템(System boundary): 유스케이스들이 존재하는 범위
3. 요구사항 개발 프로세스
1) 도출 2) 분석 3) 명세(자세히 쓰기) 4) 확인(검토)
4.
instance: 클래스에 속한 각각의 객체
message: 객체에 대한 명령
method:객체에 있는 함수
module: 실행코드와 객체들
5. 캡슐화=은닉
6. GoF(gang of four)의 디자인 패턴(6)
7. 요구사항 분석
8. 시스템 품질 속성 (sw 아키텍쳐 설계)
품질: 가용성, 변경용이성, 성능, 보안, 사용편의성, 시험용의성
AI 활용 설정
사진 설명을 입력하세요.
AI 활용 설정
사진 설명을 입력하세요.
10. CASE의 원천기술: 구조적 기법, 프로토타이핑 기술, 자동프로그래밍기술, 정보저장소, 분산처리 기술
11.
12.소프트웨어 아키텍쳐 ★
13. 럼바우의 객체지향 분석(4)
14. UmL diagram
15. UmL model
-의존(dependency) 한 요소가 다른 요소에 의존. 변경 시 영향 받을 수 있음
-실체화(realization) 인터페이스 → 구현 클래스 관계 "수행하도록"
-일반화(generalization) >` (실선, 비어 있는 삼각형), A는 B를 상속
-연관(association) 두 클래스 간 지속적인 연결, A와 B는 계속 연결됨
16.
상위case:
-요구, 모순 검사
-자료흐름도
하위 case:
-원시코드 생성
-코드 작성, 테스트
-문서화
17. 요구사항 관리 도구
18. 애자일 개발 방법론
19. GoF(gang of four)의 디자인 패턴(7)
20.


2021.08 기출문제
1.요구사항 검증
2. UML 모델
-association 연관
-dependency 의존: 1 사물이 바뀌면 타 사물에 영향. 다른 클래스를 오퍼레이션의 매개변수로 사용하는 경우 나타남.
-realization 실체화
-generalization 일반화
3. XP(익스트림 프로그래밍)
4. 추상화 기법
-자료 추상화: 자료에 적용되는 기능을 정의
-제어 추상화: 제어 메커니즘 정의 x, 원하는 효과를 정함.
-기능 추상화: 입력-> 출력 변환과정
5. 정보 은닉
-다른 모듈의 구현에 영향을 받지 않게 설계
-모듈 사이 동립성
-은닉: IP 정보(물리코드), 상세 데이터
-수정을 국한하지 않음
6. 모델링 (sw 공학)
7. 요구 분석
-기능적 요구: 시스템 수행 기능 요구 (ex. 입출력 기능, db기능 등등)
-비기능적 요구: 시스템 외. (ex.사용용이성, 효율성 신뢰성 이식성 유연성 확장성)
2022.03 기출문제
8.
9. master-slave 아키텍쳐 (실시간 시스템)
-master: 연산. 통신. 조정
-slave: 데이터 수집 기능
10. 다이어 그램
AI 활용 설정
사진 설명을 입력하세요.
11. 객체지향
객체: 실세계에 존재하거나 생각할 수 있는 것
클래스: 하나 이상의의 유사한 객체들
다형성: 상속받은 수개의 하위 객체들-> 타 특성 객체로 이용됨
상속: 연산 전달받음
12. UI
13. GoF(gang of four)의 디자인 패턴(7)
14. 애자일 방법론 (문서화xxxxx, 소통 oo)
15. 럼바우 중 자료흐름도 DFD (data flow) 객/동(상태)/기(data)
16 순차 다이어그램 (sequence diagram)
17. 객체지향 문석기법
-동적 모델링
-상향식
-추상화
-시스템의 쉬운 변경(코드 재사용)
18. UI
CLI(command line interface): dos/unix 정해진 명령 문자열
GUI(graphical user interface): 그래픽 아이콘 (사용자 편의)
NUI(natural user) 사용자의 말/행동
VUI(voice user) 사용자의 말(음성)
OUI(organic user) 모든 사물과 사용자간의 상호작용을 위한 인터페이스
19. 미들웨어
-분산시스템에서 다양한 부분 관리/ 통신/ 데이터 교환 sw/ 컴포넌트 요구하는 서비스 구현/ which is 재사용 가능
-위치 투명성
-"여러 환경"에서 분산서비스 제공
20. 소프트웨어 아키텍쳐
-파이프필터: 단방향
2022.03 기출문제
1.
2. 애자일
3, sw설계 (요구사항 분석)
도출-분석-명세-확인
4.
5. 하향식 설계 vs 상향식 설계
-하향식 설계: 레벨 낮은 세부 사항은 초기단계에서 필요.
-상향식 설계: 최하위 모듈 먼저... 위로 쌓아올리기. 기능추가 어렵다.
AI 활용 설정
사진 설명을 입력하세요.
6.DFD 데이터(자료) 흐름도
-process 원
-data flow 화살표
-data store 평행선 (자료 저장소)
-terminator 사각형 (단말)
7. sw개발
8. 객체 지향 시스템 개발 시 산출물 명세(문서)화. 모델링 언어=>UML
9. UI.
목업(mock up): 정적인 형태. 시각적으로만 구성요서. 실제 구현 xx
10.애자일 중 scrum(스크럼)
v /스프린트/는 "빨리 달리기"이다.
AI 활용 설정
사진 설명을 입력하세요.
11. UML 다이어그램
-정적(구조적) 다이어그램: 클객컴배복패
12. LOC 기법(원시 코드 라인 수 기반 비용 산정)-완전 초딩 수학문제
AI 활용 설정
사진 설명을 입력하세요.
13. 리스코프
14. GoF
15. 아키텍쳐 설계과정
목표 설정> 타입 결정> 커스터마이즈(스타일 적용)>서브시스템 기능(인터페이스 동작)> 설계 검토
16.
17. 디자인 패턴: sw에서 일반적이고 반복적인 문제해결
18. 럼바우 방법
19. FEP(frontend processor) 입력데이터를 미리 처리. 프로세서 차지 시간을 줄여줌.
EAI(enterprise application intergration) 기업용 응용 프로그램 통합
20.


2022.04 기출문제
1.UML 다이어그램
-순차다이어그램: 시간 개념(동적 상호작용), 수직방향(시간 흐름),
회귀 메시지, 제어블록...

2. 메세지 지향 미들웨어
느리고 안정적인 응답 (즉각 x)
3. XP (애자일)
-소스코드 중점
-경험주의
4.
5, 비기능적 요구: ex. 3초 이내에 보여야한다.
6. 정보공학 방법론: E-R 다이어그램(entity-relationship) 나머지 uml 다이어그램과 헷갈려서는 xxxx
7. 미들웨어 (사용자가 방법 잘 모름)
-1:1, 1:다 가능
-컴포넌트 연결 인프라
8.UI 설계지침
9. 다형성
-새로운 클래스 쉽게 추가
-오버라이딩: 상위클래스에서 정의한 메소드-> 하위클래스에서 무시하고 재정의 가능
-오버로딩: 같은 이름 메소드 중복 정의
10. 인터페이스: 간접 제어 장치, sw 실행, 새 sw연결, 순서적 연산
11. 객체: 상태/동작/고유 식별자/ 공통속성 클래스 아니고 "집합"/ 하나의 독립된 존재
12.캡슐화: 연산을 클래스로 묶음
13. 애자일
14.콤포넌트: 인터페이스를 통해서만 접근
15. GoF
16.UI 진행상황: Feedback
17. 멀티터치, 동작인식:NUI (내츄럴)
18. 소프트웨어 모델론 (소통에 도움)
-모델링 작업 결과물-> 다른 모델링 작업물 (영향 줌 !!!!)
-구조적 방법론: DFD, DD
-객체지향: UML
19. usecase
액터: 외부시스템을 포함한 모든 것, 내부시스템도 포함
사용자 측면의 요구사항
시스템 액터: 이미 개발되어 이용되고 있고, 연동된 것
20. MVC
1개 모델-> 여러개의 뷰
-응집도 높이기 가능
-뷰는 모델 데이터를 인터페이스에 '보이게'
-제어는 모델에 명령 (상태변경)
======================================================================

